[project]
name = "physrisk-api"
version = "1.4.0"
description = "OS-Climate Physical Risk API"
authors = [
  { name = "Joe Moorhouse", email = "5102656+joemoorhouse@users.noreply.github.com" },
]
requires-python = ">=3.10"
readme = "README.md"
license = { text = "Apache-2.0" }
keywords = ["Climate", "Finance"]
classifiers = [
  "Intended Audience :: Developers",
  "Intended Audience :: Science/Research",
  "License :: OSI Approved :: Apache Software License",
  "Operating System :: MacOS",
  "Operating System :: Microsoft :: Windows",
  "Operating System :: Unix",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.10",
  "Topic :: Office/Business :: Financial",
  "Topic :: Scientific/Engineering",
  "Topic :: Software Development",
]
dependencies = [
  "fastapi[standard]",
  "physrisk-lib>=1.4.0"
]

[project.urls]
Homepage = "https://github.com/os-climate/physrisk-api"
Repository = "https://github.com/os-climate/physrisk-api"
Downloads = "https://github.com/os-climate/physrisk-api/releases"
"Bug Tracker" = "https://github.com/os-climate/physrisk-api/issues"
Documentation = "https://github.com/os-climate/physrisk-api/tree/main/docs"
"Source Code" = "https://github.com/os-climate/physrisk-api"

[build-system]
requires = [
    "setuptools>=42",
    "wheel"
]
build-backend = "setuptools.build_meta"

[tool.pytest.ini_options]
testpaths = "src/test"
addopts = "-v"

[tool.mypy]
warn_unreachable = true
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "click"
ignore_missing_imports = true

[tool.coverage.run]
omit = ["src/test/*"]
relative_files = true

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

[tool.ruff.lint]
extend-fixable = [
    # Instead of trailing-whitespace
    "W291", "W293"
    ]

extend-select = [
    # Instead of pydocstyle
    "D",
    #Instead of flake8
    "E", "F","B",
    # Instead of pep8-naming
    "N",
    # Instead of flake8-debugger or debug-statements
    "T10",
]

ignore = [
    "E203",
    "E501",
    # Avoid incompatible rules
    "D203",
    "D213",

    # Ignore this rules so that precommit passes. Uncomment to start fixing them
    "B006", "B008", "B904", "B012", "B024",
    "D",
]

[tool.ruff.lint.extend-per-file-ignores]
# Ignore `D` rules everywhere except for the `src/` directory.
"!src/**.py" = ["D"]

[tool.ruff.lint.pycodestyle]
max-line-length = 120

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
docstring-code-format = true
docstring-code-line-length = "dynamic"

[dependency-groups]
test = [
    "pdm[pytest]",
    "pytest",
    "pytest-cov",
    "httpx>=0.28.1",
]
dev = [
    "mypy",
    "pre-commit",
    "ruff"
]

[tool.uv]
default-groups = ["dev", "test"]
